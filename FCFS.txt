FCFS Algorithm
#include <iostream> using namespace std;
void findWaitingTime(int pro[], int n,int bt[], int wt[])
{
wt[0]=0;
for(int i=1;i<n;i++)
{
wt[i]=bt[i-1]+wt[i-1];
}
}
void findTurnAroundTime(int pro[], int n,int bt[], int wt[],int tat[])
{
for(int i=0;i<n;i++)
{
tat[i]=bt[i]+wt[i];
}
}
void findAvgTime(int pro[], int n, int bt[])
{
int wt[n],tat[n],total_wt=0,total_tat=0; findWaitingTime(pro,n,bt,wt); findTurnAroundTime(pro,n,bt,wt,tat);
// Calculating avg waiting time and turn around time
cout<<"Processes "<<"Burst time "<<"Waiting time "<<"Turn Around time "<<endl;
for(int i=0;i<n;i++)
{
total_wt += wt[i]; total_tat += tat[i];
cout<<i+1<<" "<<bt[i]<<" "<<wt[i]<<" "<<tat[i]<<endl;
}
cout<<"Average Waiting Time "<<float(total_wt)/float(n)<<endl; cout<<"Average Turn Around Time "<<float(total_tat)/float(n)<<endl;
}
int main(){
int processes[]={1,2,3};
int n = sizeof processes/sizeof processes[0]; int burst_time[]={10,5,8}; findAvgTime(processes,n,burst_time); return 0;
}